[
  {
    "objectID": "full_analysis.html",
    "href": "full_analysis.html",
    "title": "NBA Early-Career Competition Analysis",
    "section": "",
    "text": "In the NBA, teams often face decisions about how to manage players at the same position. A familiar scenario arises when a team drafts a young, high-potential player despite already having an established player at the same position. This raises the question: does having a more experienced teammate in the same role limit opportunities for the rookie or sophomore, or shape their early development?\nThis project examines how positional competition during a player’s rookie and sophomore seasons influences scoring development over the first five years of their career. Positional competition is defined as the number of teammates at the same position who have more experience and play comparable minutes to the focal player.\nThe analysis focuses on NBA lottery picks (drafted 1–14) from 2010–2020. I collected each player’s regular-season points per game (PTS.G) over their first five seasons. To account for repeated measurements within players, I used a linear mixed-effects model (LMM), which combines fixed effects (overall trends) with random effects (player-specific deviations)."
  },
  {
    "objectID": "full_analysis.html#introduction",
    "href": "full_analysis.html#introduction",
    "title": "NBA Early-Career Competition Analysis",
    "section": "",
    "text": "In the NBA, teams often face decisions about how to manage players at the same position. A familiar scenario arises when a team drafts a young, high-potential player despite already having an established player at the same position. This raises the question: does having a more experienced teammate in the same role limit opportunities for the rookie or sophomore, or shape their early development?\nThis project examines how positional competition during a player’s rookie and sophomore seasons influences scoring development over the first five years of their career. Positional competition is defined as the number of teammates at the same position who have more experience and play comparable minutes to the focal player.\nThe analysis focuses on NBA lottery picks (drafted 1–14) from 2010–2020. I collected each player’s regular-season points per game (PTS.G) over their first five seasons. To account for repeated measurements within players, I used a linear mixed-effects model (LMM), which combines fixed effects (overall trends) with random effects (player-specific deviations)."
  },
  {
    "objectID": "full_analysis.html#overview",
    "href": "full_analysis.html#overview",
    "title": "NBA Early-Career Competition Analysis",
    "section": "Overview",
    "text": "Overview\nThe analysis focuses on three core measures:\n\nRookie-year competition: Experienced players at the same position during Year 1.\nSophomore-year competition: Experienced players at the same position during Year 2.\nOutcome: Average points per game (PTS.G) across the first five seasons.\n\n\nMethods & Approach\n\nData Preparation: Collected data with Python (requests, BeautifulSoup), then cleaned and organized it with pandas and dplyr in R.\nLinear Mixed-Effects Model: Modeled scoring trajectories using fixed effects, player-level random effects, and splines (piecewise polynomial functions) to capture nonlinear growth.\nKey Findings & Visualizations: Evaluated model reliability with robust confidence intervals and diagnostic checks, and visualized effects with coefficient and interaction plots.\n\n\nModeling Flow Chart\n\n\n\n\n\nflowchart LR\n    A[Collect Player Data] --&gt; B[Clean & Merge Data]\n    B --&gt; C[Fit Initial LMM]\n    C --&gt; D[Check Diagnostics]\n    D --&gt; E[Refine Model]\n    E --&gt; F[Visualize Results]\n    E --&gt; D\n\n\n\n\n\n\n\n\n\nTakeaways\n\nPlayers facing more competition in their sophomore year tend to have flatter or declining scoring trajectories after Year 3.\nRookie-year competition has little effect on growth trajectories but slightly increases baseline scoring.\nEven after controlling for minutes, usage, efficiency, and team context, early-career competition has a subtle but detectable effect on scoring development."
  },
  {
    "objectID": "full_analysis.html#data-preparation",
    "href": "full_analysis.html#data-preparation",
    "title": "NBA Early-Career Competition Analysis",
    "section": "Data Preparation",
    "text": "Data Preparation\nPlayer and career data were collected through a Python web-scraping pipeline built with the requests and BeautifulSoup libraries, then cleaned and merged with pandas before being imported into R for additional data cleaning and analysis.\nPlayers were evaluated over their first five active NBA seasons, defined as seasons in which they appeared in at least one regular-season game. Seasons with no participation (e.g., due to injury) were excluded from the five-year span. Additionally, to reduce noise from seasons with minimal playing time, seasons where players logged fewer than 15 games were excluded from the analysis.\nAdditionally, for numerical stability and interpretability, all numeric predictors were centered and standardized prior to entry into the model, with the exception of Career Year, which was centered only."
  },
  {
    "objectID": "full_analysis.html#exploratory-data-analysis-eda",
    "href": "full_analysis.html#exploratory-data-analysis-eda",
    "title": "NBA Early-Career Competition Analysis",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\nBefore fitting the mixed model, it’s useful to visualize how scoring develops across a player’s early career and how it might relate to varying levels of positional competition.\n\nPoints per Game Trajectories\n\n\n\n\n\n\n\nObservation: Average points per game (PTS.G) increases slightly over the first five years, but individual trajectories vary considerably, highlighting the need for mixed-effects modeling.\n\n\n\nGrouping by Competition\n\n\n\n\n\n\n\n\n\n\nObservation: More rookie-year competitors is associated with slightly lower baseline PTS.G, but growth slopes appear similar across groups. Results for higher competition groups are less stable due to smaller sample sizes (n). The per-year averages may suggest early-career scoring growth is nonlinear.\n\n\n\n\n\n\n\n\n\n\n\nObservation: Players with no sophomore competitors show the highest average PTS.G. Slopes vary across groups with no distinguishable relationship between competition and trajectory. As noted earlier, estimates for higher competition groups should be interpreted cautiously, and scoring growth may not be linear within each group."
  },
  {
    "objectID": "full_analysis.html#linear-mixed-effects-model",
    "href": "full_analysis.html#linear-mixed-effects-model",
    "title": "NBA Early-Career Competition Analysis",
    "section": "Linear Mixed-Effects Model",
    "text": "Linear Mixed-Effects Model\nHaving examined rookie- and sophomore-year competition effects descriptively through trajectory plots, the next step is to formally test these relationships using linear mixed-effects models (LMMs).\nThe purpose of the mixed model is to account for the fact that there are repeated measures for each player. A simple linear regression would assume all players share the same error variance, which is unrealistic given that players differ systematically in their scoring trajectories, as the descriptive plots already suggested.\nAn additional advantage of linear mixed models is their ability to handle unbalanced data. This is particularly relevant here, since not all players in the dataset remain in the league through Year 5.\n\nIntercept Only Model\nAs a starting point, I fit a simple intercept-only model with random intercepts for players. This baseline model estimates the overall average points per game (PTS.G) while capturing how each player deviates from that average.\n\n# Fit random intercept model\nnull_model &lt;- lmer(PTS.G ~ (1 | Player), data = player_data, REML = FALSE)\nicc(null_model)\n\n# Intraclass Correlation Coefficient\n\n    Adjusted ICC: 0.704\n  Unadjusted ICC: 0.704\n\n\nThe Intraclass Correlation Coefficient (ICC) from this model indicates that roughly 70% of the total variance in points per game is attributable to between-player differences, providing a strong justification for the mixed-effects approach.\n\n\nVariables of Interest\nBuilding on the null model, I included Career Year (CareerYear_c) as a fixed effect and evaluated whether slopes varied across players. Visualizations of player-level growth suggested some variability. However, once other predictors were added, including Career Year as a random effect did not improve model fit, so it was excluded in the final model.\nI then added positional competition counts, poscomp_rookie_c and poscomp_soph_c (for rookie- and sophomore-year competition, respectively), as well as their interactions with Career Year. This allowed for testing whether early-career competition influences scoring levels or short-term growth trajectories.\n\n\nControl Variables\nTo isolate the effects of early-career positional competition, I iteratively added key predictors shown to influence scoring. These included: minutes per game (MP.G_c), usage percentage (USG_c), true shooting percentage (TS_c), assists per game (AST.G_c), team pace (Team_Pace_c), and season effects (Season_c). Diagnostic checks were used throughout to assess model assumptions and detect potential nonlinearities or interactions.\n\n\nTransformations and Interactions\nSeveral nonlinearities were included in the model including polynomial terms for minutes played (MP.G_c), true shooting (TS_c), and season (Season_c). Additionally, natural cubic splines were introduced for Career Year (CareerYear_c) to flexibly capture nonlinear scoring trajectories across time without forcing a strict polynomial form.\nAn interaction between usage percentage and polynomial terms for minutes played was retained in the final model due to theoretical relevance and statistical significance, since playing time may amplify how usage percentage affects points per game. By contrast, an interaction between minutes and true shooting was not included because it introduced violations in residual normality, homoscedasticity, and independence.\n\n\nRandom Slopes for Player-Level Difference\nDomain knowledge suggests that usage rate and true shooting affect scoring differently across players.\nSome players convert efficiency (TS_c) directly into more points by taking high-value shots, while others take fewer shots or pass on opportunities. Usage (USG_c) is the proportion of team possessions ending with a player, but high usage does not always translate to more points; some players may favor low-percentage isolation attempts late in the shot clock, or turn the ball over.\nScatter plots with player-level regression lines (PTS.G ~ TS_c and PTS.G ~ USG_c) confirmed that both baseline scoring levels (intercepts) and relationships with efficiency and usage (slopes) varied across players. This motivated the use of a random-effects structure that allows each player to have their own slopes for TS_c and USG_c, along with an individual baseline scoring intercept:\n\n\nPTS.G ~ (1 + TS_c + USG_c || Player)\n\n\nThis allows each player to have their own baseline scoring and unique sensitivities to efficiency and usage.\n\n\nFinal Model\nThe final mixed-effects model estimates how rookie- and sophomore-year positional competition affects both baseline scoring and scoring growth, while adjusting for player- and team-level controls:\n\n### Linear Mixed-Effects Model ###\nfit_mixed &lt;- lmer(PTS.G ~ poscomp_rookie_c*ns(CareerYear_c,2) \n                  + poscomp_soph_c*ns(CareerYear_c,2)\n                  + Team_Pace_c + AST.G_c \n                  + poly(TS_c,3,raw=TRUE) + poly(Season_c,2,raw=TRUE)\n                  + poly(MP.G_c,2,raw=TRUE)*USG_c\n                  + (1 + TS_c + USG_c || Player),\n                  player_data)\n\nThis model balances statistical performance and interpretability. It includes both fixed effects (competition, efficiency, usage, assists, pace, season) and random effects (player-level intercepts with slopes for usage and efficiency). In doing so, it models league-wide scoring trends while accounting for how individual players differ in converting efficiency and usage into points."
  },
  {
    "objectID": "full_analysis.html#model-diagnostics",
    "href": "full_analysis.html#model-diagnostics",
    "title": "NBA Early-Career Competition Analysis",
    "section": "Model Diagnostics",
    "text": "Model Diagnostics\nTo verify that the final linear mixed-effects model was well-specified, I checked the common assumptions of linearity, homoscedasticity, normality, independence, and multicollinearity.\n\nResiduals vs. Fitted Values\n\n\n\n\n\n\n\n\n\nResiduals are scattered around zero with no strong curvature, suggesting that the model adequately captures linearity in the conditional mean and variance is reasonably constant (homoscedasticity).\n\n\nNormality of Residuals\n\n\n\n\n\n\n\n\n\nTo assess residual normality, I inspected a Q–Q plot of the standardized residuals. The residuals show some deviations at the tails, suggesting they are not perfectly normally distributed.\n\n\n\n\n\n\n\n\n\nTo supplement this, I used the DHARMa package, which tests residual uniformity rather than normality. The results indicate that the residuals are consistent with the expected distribution under the model, i.e. there is no evidence of model misspecification or biased inference.\n\n\nIndependence\n\n\n\n\n\n\n\n\n\nTemporal autocorrelation of residuals was examined to ensure independence of errors across career years within players. A slight negative autocorrelation was observed between residuals two years apart (Lag 2), but the overall effect is small and unlikely to bias model estimates.\n\n\nMulticollinearity\nMulticollinearity in a model means that several predictors are highly correlated and thus redundant, which can lead to unreliable estimates.\n\n\n\n\n\n\n\n\n\nVariance inflation diagnostics (VIF) show no evidence of multicollinearity among predictors."
  },
  {
    "objectID": "full_analysis.html#key-findings-visualizations",
    "href": "full_analysis.html#key-findings-visualizations",
    "title": "NBA Early-Career Competition Analysis",
    "section": "Key Findings",
    "text": "Key Findings\nModel diagnostics indicated that residuals deviate slightly from normality, especially at the tails. While estimates for linear mixed models are generally robust to such deviations, I decided to include bootstrapped 95% confidence intervals (CIs) to better capture uncertainty. Bootstrapping repeatedly resamples the data (with replacement) to generate a distribution of each estimate, then calculates a confidence interval from this distribution. This approach does not rely on the normality assumption and provides more reliable uncertainty estimates for the fixed effects.\n\n\n\nFixed Effects with Bootstrapped 95% CI\n\n\n\nestimate\nconf.low\nconf.high\nsig.\n\n\n\n\nposcomp_rookie_c\n0.1474\n0.0415\n0.2470\n*\n\n\nposcomp_soph_c\n0.0952\n-0.0002\n0.1979\n\n\n\nposcomp_rookie_c:ns(CareerYear_c, 2)1\n-0.1972\n-0.3802\n0.0095\n\n\n\nposcomp_rookie_c:ns(CareerYear_c, 2)2\n0.0283\n-0.0924\n0.1389\n\n\n\nns(CareerYear_c, 2)1:poscomp_soph_c\n-0.0310\n-0.2381\n0.1505\n\n\n\nns(CareerYear_c, 2)2:poscomp_soph_c\n-0.1833\n-0.3104\n-0.0641\n*\n\n\n\n\n\n \nBecause Career Year is centered, model estimates for career-year effects should be interpreted relative to the average early-career stage in the sample.\nA full summary table including estimates for all predictors with bootstrapped confidence intervals is provided in the Appendix.\n\nInterpretation of Spline Terms\nInstead of interpreting the numeric coefficients for interactions with spline terms directly, it’s more informative to visualize them. The Career Year effect, ns(CareerYear_c, 2), is decomposed into two natural spline basis functions (Basis 1 and Basis 2), which can be plotted to show their individual contributions.\n\n\n\n\n\n\n\n\n\nThe estimated interaction between sophomore-year competition and the second spline basis (Basis 2) is -0.183 (95% CI [-0.31, -0.06]). Basis 2 captures the accelerating (convex) portion of the Career Year effect; the negative interaction indicates that higher sophomore-year competition dampens that acceleration, so growth that would normally pick up after Year 3 tends to flatten or dip."
  },
  {
    "objectID": "full_analysis.html#visualizations",
    "href": "full_analysis.html#visualizations",
    "title": "NBA Early-Career Competition Analysis",
    "section": "Visualizations",
    "text": "Visualizations\nThe first plot summarizes the relevant fixed effects from the linear mixed-effects model, showing estimates with bootstrapped 95% confidence intervals. The second plot illustrates the interaction between sophomore-year competition and Career Year.\n\nFixed Effects Plot\n\n\n\n\n\n\nSophomore-year competition interacts significantly with Career Year, and rookie-year competition has a small positive effect on baseline scoring. While the estimated effects are modest (-0.18 and 0.15), they demonstrate consistent, statistically significant patterns in early-career scoring.\nControlling for other covariates, this suggests that players with more rookie-year competition have marginally higher baseline scoring outputs, while players with higher competition in their sophomore year tend to follow different scoring trajectories over their first five seasons.\nParticularly, players who faced more competitors in their second season show flatter or even negative growth in their scoring output after Year 3 compared to peers with fewer competitors.\n\n\nInteraction Plot\nTo illustrate this effect on scoring trajectory, predicted points per game are shown across the first five career years for different levels of sophomore-year competition. Confidence bands highlight uncertainty in the predictions.\n\n\n\n\n\n\n \nPredicted scoring trajectories vary non-linearly across career years and differ by sophomore-year competition level. Players facing more competition in their second season tend to have higher predicted points per game in the early years, but these advantages diminish over time, with trajectories converging (or in some cases reversing) by Year 4 or 5.\n\n\nInterpretation\nTogether, the fixed-effects and interaction plots suggest that, controlling for other player- and team-level effects, sophomore-year positional competition reduces scoring growth after Year 3. Rookie-year competition, by contrast, has little to no impact on growth trajectories though it has a marginal, positive impact on baseline scoring levels.\nWhile the effect sizes are modest, they highlight the subtle influence of early-career competition, especially in the sophomore season, on a player’s scoring trajectory."
  },
  {
    "objectID": "full_analysis.html#limitations",
    "href": "full_analysis.html#limitations",
    "title": "NBA Early-Career Competition Analysis",
    "section": "Limitations",
    "text": "Limitations\nThere are several limitations to this analysis. First, using fixed position categories is somewhat restrictive as NBA players increasingly have dynamic, position-less roles. Second, focusing only on lottery picks limits generalizability across the league, though it reduces noise from fringe players with irregular output. Third, positional competition is measured based on a simple count of teammates with more experience and similar minutes, which may introduce measurement error and does not capture qualitative differences in teammates’ skill levels or roles on the team. Finally, sample sizes are smaller for higher competition groups, so estimates for these groups are less stable."
  },
  {
    "objectID": "full_analysis.html#conclusion",
    "href": "full_analysis.html#conclusion",
    "title": "NBA Early-Career Competition Analysis",
    "section": "Conclusion",
    "text": "Conclusion\nThis analysis shows that early-career positional competition has a subtle but meaningful impact on scoring trajectories for NBA lottery picks. Players facing more competition in their sophomore year tend to have flatter or even declining scoring growth after Year 3, while rookie-year competition gives a small boost to baseline scoring without noticeably affecting growth.\nFrom a team perspective, these findings could help guide drafting or roster decisions as well as player development. For instance, understanding the overall impact of early-career competition could inform how teams allocate minutes or understand early-career development trends.\nOverall, this analysis highlights how mixed-effects modeling can uncover patterns in complex longitudinal sports data."
  },
  {
    "objectID": "full_analysis.html#appendix",
    "href": "full_analysis.html#appendix",
    "title": "NBA Early-Career Competition Analysis",
    "section": "Appendix",
    "text": "Appendix\n\nFixed Effects Table\n\n\n\nFixed Effects with Bootstrapped 95% CI\n\n\n\nestimate\nconf.low\nconf.high\nsig.\n\n\n\n\n(Intercept)\n11.4092\n11.2915\n11.5264\n*\n\n\nposcomp_rookie_c\n0.1474\n0.0415\n0.2470\n*\n\n\nns(CareerYear_c, 2)1\n0.3323\n0.1194\n0.5433\n*\n\n\nns(CareerYear_c, 2)2\n0.1354\n0.0138\n0.2545\n*\n\n\nposcomp_soph_c\n0.0952\n-0.0002\n0.1979\n\n\n\nTeam_Pace_c\n0.3914\n0.3272\n0.4508\n*\n\n\nAST.G_c\n-0.5117\n-0.5902\n-0.4256\n*\n\n\npoly(TS_c, 3, raw = TRUE)1\n1.0638\n0.9655\n1.1602\n*\n\n\npoly(TS_c, 3, raw = TRUE)2\n0.0441\n0.0008\n0.0849\n*\n\n\npoly(TS_c, 3, raw = TRUE)3\n-0.0336\n-0.0539\n-0.0145\n*\n\n\npoly(Season_c, 2, raw = TRUE)1\n-0.0055\n-0.0881\n0.0758\n\n\n\npoly(Season_c, 2, raw = TRUE)2\n0.0688\n0.0213\n0.1130\n*\n\n\npoly(MP.G_c, 2, raw = TRUE)1\n3.7147\n3.6405\n3.7899\n*\n\n\npoly(MP.G_c, 2, raw = TRUE)2\n0.0887\n0.0393\n0.1429\n*\n\n\nUSG_c\n3.0975\n2.9935\n3.1938\n*\n\n\nposcomp_rookie_c:ns(CareerYear_c, 2)1\n-0.1972\n-0.3802\n0.0095\n\n\n\nposcomp_rookie_c:ns(CareerYear_c, 2)2\n0.0283\n-0.0924\n0.1389\n\n\n\nns(CareerYear_c, 2)1:poscomp_soph_c\n-0.0310\n-0.2381\n0.1505\n\n\n\nns(CareerYear_c, 2)2:poscomp_soph_c\n-0.1833\n-0.3104\n-0.0641\n*\n\n\npoly(MP.G_c, 2, raw = TRUE)1:USG_c\n1.0103\n0.9375\n1.0747\n*\n\n\npoly(MP.G_c, 2, raw = TRUE)2:USG_c\n0.0615\n0.0094\n0.1148\n*\n\n\n\n\n\n\n\n\nModel Summary\n\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: PTS.G ~ poscomp_rookie_c * ns(CareerYear_c, 2) + poscomp_soph_c *  \n    ns(CareerYear_c, 2) + Team_Pace_c + AST.G_c + poly(TS_c,  \n    3, raw = TRUE) + poly(Season_c, 2, raw = TRUE) + poly(MP.G_c,  \n    2, raw = TRUE) * USG_c + (1 + TS_c + USG_c || Player)\n   Data: player_data\n\nREML criterion at convergence: 1099.1\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-4.8418 -0.5083  0.0119  0.4787  3.3420 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n Player   (Intercept) 0.03077  0.1754  \n Player.1 TS_c        0.11966  0.3459  \n Player.2 USG_c       0.07064  0.2658  \n Residual             0.17438  0.4176  \nNumber of obs: 656, groups:  Player, 132\n\nFixed effects:\n                                        Estimate Std. Error         df t value\n(Intercept)                            11.409206   0.059454 435.352101 191.899\nposcomp_rookie_c                        0.147408   0.051608 430.232781   2.856\nns(CareerYear_c, 2)1                    0.332340   0.107089 563.830696   3.103\nns(CareerYear_c, 2)2                    0.135351   0.062105 557.767116   2.179\nposcomp_soph_c                          0.095167   0.050961 451.467558   1.867\nTeam_Pace_c                             0.391359   0.031669 586.756634  12.358\nAST.G_c                                -0.511746   0.042560 283.531146 -12.024\npoly(TS_c, 3, raw = TRUE)1              1.063768   0.049181 199.048824  21.630\npoly(TS_c, 3, raw = TRUE)2              0.044122   0.021972 302.192929   2.008\npoly(TS_c, 3, raw = TRUE)3             -0.033636   0.010161 528.182900  -3.310\npoly(Season_c, 2, raw = TRUE)1         -0.005509   0.041574 239.313778  -0.133\npoly(Season_c, 2, raw = TRUE)2          0.068765   0.024000 600.763374   2.865\npoly(MP.G_c, 2, raw = TRUE)1            3.714675   0.039879 474.818881  93.148\npoly(MP.G_c, 2, raw = TRUE)2            0.088724   0.025495 631.312855   3.480\nUSG_c                                   3.097497   0.049421 227.557315  62.675\nposcomp_rookie_c:ns(CareerYear_c, 2)1  -0.197245   0.106467 567.307847  -1.853\nposcomp_rookie_c:ns(CareerYear_c, 2)2   0.028312   0.060797 541.661526   0.466\nns(CareerYear_c, 2)1:poscomp_soph_c    -0.031049   0.102425 545.410766  -0.303\nns(CareerYear_c, 2)2:poscomp_soph_c    -0.183339   0.062295 541.780643  -2.943\npoly(MP.G_c, 2, raw = TRUE)1:USG_c      1.010299   0.036313 358.045097  27.822\npoly(MP.G_c, 2, raw = TRUE)2:USG_c      0.061535   0.026603 475.899723   2.313\n                                      Pr(&gt;|t|)    \n(Intercept)                            &lt; 2e-16 ***\nposcomp_rookie_c                      0.004494 ** \nns(CareerYear_c, 2)1                  0.002009 ** \nns(CareerYear_c, 2)2                  0.029721 *  \nposcomp_soph_c                        0.062488 .  \nTeam_Pace_c                            &lt; 2e-16 ***\nAST.G_c                                &lt; 2e-16 ***\npoly(TS_c, 3, raw = TRUE)1             &lt; 2e-16 ***\npoly(TS_c, 3, raw = TRUE)2            0.045519 *  \npoly(TS_c, 3, raw = TRUE)3            0.000995 ***\npoly(Season_c, 2, raw = TRUE)1        0.894691    \npoly(Season_c, 2, raw = TRUE)2        0.004313 ** \npoly(MP.G_c, 2, raw = TRUE)1           &lt; 2e-16 ***\npoly(MP.G_c, 2, raw = TRUE)2          0.000536 ***\nUSG_c                                  &lt; 2e-16 ***\nposcomp_rookie_c:ns(CareerYear_c, 2)1 0.064453 .  \nposcomp_rookie_c:ns(CareerYear_c, 2)2 0.641629    \nns(CareerYear_c, 2)1:poscomp_soph_c   0.761899    \nns(CareerYear_c, 2)2:poscomp_soph_c   0.003389 ** \npoly(MP.G_c, 2, raw = TRUE)1:USG_c     &lt; 2e-16 ***\npoly(MP.G_c, 2, raw = TRUE)2:USG_c    0.021142 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNote: Level-1 predictors were not decomposed into within-player and between-player components in this model, as they are control variables. Their estimates should be interpreted as a mix of within- and between-player effects.\n\n\nCode\nMy code for this analysis can be found here:\nCode"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NBA Early-Career Competition Analysis",
    "section": "",
    "text": "Objective\nExamine how rookie- and sophomore-year positional competition affects NBA lottery picks’ scoring trajectories over their first five seasons. Positional competition measures how crowded a player’s role is on their team.\n\n\n\n\n\n\n\n\n\n\nKey Insight\n★ After accounting for individual and team-level factors, players facing more competition in their sophomore year start strong but plateau, or even decline in points per game over time, while rookie-year competition slightly boosts baseline scoring without affecting growth.\n\n\n\nMethods\n\nData: Player stats from Basketball Reference, cleaned and processed in Python and R.\nModel: Linear mixed-effects model capturing player-level differences over time.\nValidation: Confidence intervals and diagnostics ensured reliable estimates.\nVisualization: Interactive plots of predicted scoring trajectories.\n\n\n\n\nQuick Takeaways\n\nSophomore-year competition matters: Players with more competition peak early, then flatten or decline.\nRookie-year competition has smaller effect: Slightly raises baseline scoring without impacting growth.\nOverall Pattern: Early-career competition gives modest initial gains that fade over time.\n\n\n\n\nWhy It Matters\nThe methods used here apply beyond sports:\n\nFinance: Modeling portfolio growth under varying conditions.\nHealthcare: Tracking patient outcomes over treatment timelines.\nEducation: Evaluating student performance trajectories in different learning environments.\n\n\n\n\nDeep Dive\nThe full analysis including data processing, model diagnostics, and detailed results is available:\nRead the Full Analysis"
  },
  {
    "objectID": "code.html",
    "href": "code.html",
    "title": "NBA Early-Career Competition Analysis Code",
    "section": "",
    "text": "rm(list = ls())\n\n# Load packages\nlibrary(lme4)\nlibrary(dplyr)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(plotly)\nlibrary(patchwork)\nlibrary(tidyr)\nlibrary(ggeffects)\nlibrary(lmerTest)\nlibrary(performance) \nlibrary(splines)\nlibrary(purrr)\nlibrary(viridis)\nlibrary(DHARMa)\n\nset.seed(42)"
  },
  {
    "objectID": "code.html#data-preparation",
    "href": "code.html#data-preparation",
    "title": "NBA Early-Career Competition Analysis Code",
    "section": "Data Preparation",
    "text": "Data Preparation\n\n# Load data\nplayer_data &lt;- read.csv(\"data/nba_player_stats.csv\", \n                        stringsAsFactors = TRUE, header = TRUE)"
  },
  {
    "objectID": "code.html#eda",
    "href": "code.html#eda",
    "title": "NBA Early-Career Competition Analysis Code",
    "section": "EDA",
    "text": "EDA\n\n# Summarize per player\nchart_data &lt;- player_data %&gt;%\n  group_by(Player, CareerYear_index) %&gt;%\n  summarise(\n    PTS.G = mean(PTS.G, na.rm = TRUE),\n    poscomp_rookie = first(poscomp_rookie),\n    poscomp_soph = first(poscomp_soph),\n    .groups = \"drop\"\n  )\n\n# Initialize Plot\np &lt;- ggplot(data = chart_data, aes(x = CareerYear_index, y = PTS.G, \n                                   group = Player))\n\n\n### Points per Game Trajectories ###\np1 &lt;- p + geom_line(aes(color = \"Individual Players\"),alpha=0.25, \n                    show.legend = TRUE) +\n  stat_smooth(aes(group=1, color = \"Linear Trend\"), method = \"lm\", \n              formula = y ~ x, se = FALSE) +\n  stat_summary(aes(group=1, color = \"Mean per Year\"), geom=\"point\", \n               fun = mean, shape=17, size=3) +\n  scale_color_manual(\n    name = NULL, \n    values = c(\"Individual Players\" = \"gray50\", \n               \"Linear Trend\" = \"blue\", \n               \"Mean per Year\" = \"black\")\n    ) +\n  theme_bw() +\n  labs(\n    y = \"Points per Game\",\n    x = \"Career Year\",\n    title = \"Early-Career Points per Game Trajectories\"\n    ) +\n  theme(\n    plot.title = element_text(hjust=0.5, face=\"bold\", size=16),\n    legend.position = \"bottom\"\n    )\n \n# Make interactive\nggplotly(p1)\n\n\n# Define dataset with labels\nlabel_data &lt;- chart_data %&gt;% \n  filter(CareerYear_index &gt;= 1) %&gt;%\n  group_by(poscomp_rookie) %&gt;%\n  summarise(n = n_distinct(Player),\n            x = max(CareerYear_index),\n            y = max(PTS.G, na.rm = TRUE)) \n\n\n### Grouping by Competition (Rookie Year) ###\np + geom_line(aes(color=\"Individual Players\"),alpha=0.15, show.legend = TRUE) + \n  stat_smooth(aes(group=1, color=\"Linear Trend\"),method = \"lm\", \n              formula = y ~ x) + \n  stat_summary(aes(group=1, color=\"Mean per Year\"), geom = \"point\", \n               fun = mean, shape=17, size=3) + \n  facet_grid(. ~ as.factor(paste(poscomp_rookie, \"Competitors\"))) + \n  geom_text(\n    data = label_data,\n    aes(x=5, y=34, label = paste0(\"n = \", n)),\n    inherit.aes = FALSE,\n    hjust=1, vjust=1, size=3, color = \"black\"\n  ) +\n  scale_color_manual(\n    name = NULL, \n    values = c(\"Individual Players\" = \"gray50\", \n               \"Linear Trend\" = \"blue\", \n               \"Mean per Year\" = \"black\")\n    ) +\n  theme_bw() +\n  labs(y = \"Points per Game\", x = \"Career Year\",\n       title = \"Early-Career Points per Game Trajectories\",\n       subtitle = \"Grouped by Rookie-Year Competition Levels\") +\n  theme(\n    plot.title = element_text(hjust=0.5, face = \"bold\", size=16),\n    plot.subtitle = element_text(hjust=0.5, size=12, face = \"italic\", \n                                 color = \"gray40\"),\n    legend.position = \"bottom\"\n  )\n\n\n# Define dataset with labels\nlabel_data &lt;- chart_data %&gt;%\n  filter(CareerYear_index !=1) %&gt;% # don't include data for rookie year\n  group_by(poscomp_soph) %&gt;%\n  summarise(n = n_distinct(Player),\n            x = max(CareerYear_index),\n            y = max(PTS.G, na.rm = TRUE)) \n\np &lt;- ggplot(data = chart_data %&gt;%\n         filter(CareerYear_index !=1),\n       aes(x = CareerYear_index, y = PTS.G, group = Player))\n\n\n### Grouping by Competition (Sophomore Year) ###\np + geom_line(aes(color=\"Individual Players\"), alpha=0.15, show.legend = TRUE) + \n  stat_smooth(aes(group=1, color=\"Linear Trend\"),method = \"lm\", \n              formula = y ~ x) + \n  stat_summary(aes(group=1, color=\"Mean per Year\"), geom = \"point\", \n               fun = mean, shape=17, size=3) + \n  facet_grid(. ~ as.factor(paste(poscomp_soph, \"Competitors\"))) +\n  geom_text(\n    data = label_data,\n    aes(x=5, y=34, label = paste0(\"n = \", n)),\n    inherit.aes = FALSE,\n    hjust=1, vjust=1, size=3, color = \"black\"\n  ) +\n  scale_color_manual(\n    name = NULL, \n    values = c(\"Individual Players\" = \"gray50\", \n               \"Linear Trend\" = \"blue\", \n               \"Mean per Year\" = \"black\")\n    ) +\n  theme_bw() +\n  labs(\n    y = \"Points per Game\", x = \"Career Year\",\n    title = \"Early Career Points per Game Trajectories\",\n    subtitle = \"Grouped by Sophomore-Year Competition Levels\"\n  ) +\n  theme(\n    plot.title = element_text(hjust=0.5, face = \"bold\", size=16),\n    plot.subtitle = element_text(hjust=0.5, size=12, face = \"italic\", \n                                 color = \"gray40\"),\n    legend.position = \"bottom\"\n  )"
  },
  {
    "objectID": "code.html#linear-mixed-effects-model",
    "href": "code.html#linear-mixed-effects-model",
    "title": "NBA Early-Career Competition Analysis Code",
    "section": "Linear Mixed-Effects Model",
    "text": "Linear Mixed-Effects Model\n\n### Linear Mixed-Effects Model ###\nfit_mixed &lt;- lmer(PTS.G ~ poscomp_rookie_c*ns(CareerYear_c,2) \n                  + poscomp_soph_c*ns(CareerYear_c,2)\n                  + Team_Pace_c + AST.G_c \n                  + poly(TS_c,3,raw=TRUE) + poly(Season_c,2,raw=TRUE)\n                  + poly(MP.G_c,2,raw=TRUE)*USG_c\n                  + (1 + TS_c + USG_c || Player),\n                  player_data)"
  },
  {
    "objectID": "code.html#model-diagnostics",
    "href": "code.html#model-diagnostics",
    "title": "NBA Early-Career Competition Analysis Code",
    "section": "Model Diagnostics",
    "text": "Model Diagnostics\n\n### Residuals vs. Fitted Values ###\nresiduals &lt;- resid(fit_mixed,type=\"pearson\") # residuals (errors)\nfitted &lt;- fitted(fit_mixed) # fitted values\n\n# Residuals vs Fitted plot \nplot(fitted, residuals,main=\"Residuals vs Fitted\")\nabline(h = 0, lty = 2, col = \"red\")\n\n\n### Normality of Residuals ###\nqqnorm(residuals)\nqqline(residuals, col=\"red\")\n\n\n### Uniformity of Residuals, Dispersion, Outliers ###\nsimulationOutput &lt;-  simulateResiduals(fittedModel = fit_mixed, n = 1000)\nresid_res &lt;- testResiduals(simulationOutput)\n\n\n### Independence ###\n# Checking Temporal Autocorrelation\n# Reference: https://aosmith.rbind.io/2018/06/27/uneven-grouped-autocorrelation/\n\n# Creating df of residuals\nres_df &lt;- data.frame(\n  Player = player_data$Player,\n  Year   = player_data$CareerYear_c,\n  resid  = residuals(fit_mixed, type = \"pearson\")\n  )\n\n# Handling missing years for players\nres_expand &lt;- res_df %&gt;%\n  group_by(Player) %&gt;%\n  complete(Year = seq(min(Year, na.rm = TRUE),\n                      max(Year, na.rm = TRUE),\n                      by = 1)) %&gt;%\n  ungroup()\n\nmax_lag &lt;- 4 \nnall &lt;- map_df(1:max_lag, function(L) {\n  res_df %&gt;%\n    group_by(Player) %&gt;%\n    arrange(Player, Year) %&gt;%\n    summarise(lag = list(diff(Year, lag = L)), .groups = \"drop\") %&gt;%\n    unnest(lag) %&gt;%\n    mutate(lag = L)\n  }) %&gt;%\n  group_by(lag) %&gt;%\n  summarise(n = n(), .groups = \"drop\")\n\n# Global ACF across all players\nacf_vals &lt;- acf(res_expand$resid, lag.max = max_lag, na.action = na.pass, \n                plot = FALSE)\n\n# Normalized confidence interval bands\nplot(acf_vals, ci = 0, main = \"ACF of Residuals\")\nlines(1:4,-qnorm(1-.025)/sqrt(nall$n), lty = 2)\nlines(1:4, qnorm(1-.025)/sqrt(nall$n), lty = 2)\n\n\n### Diagnostic Plots ###\ndiagnostic_plots &lt;- plot(check_model(fit_mixed, size_title=24, \n                                     size_axis_title = 16, panels=FALSE))\n\n\n### Multicollinearity Plot ###\ndiagnostic_plots[[5]] +\n  theme(\n    plot.subtitle = element_text(size = 16),\n    axis.text.x = element_text(size = 10, angle = 45, hjust = 1)\n    )"
  },
  {
    "objectID": "code.html#key-findings-visualizations",
    "href": "code.html#key-findings-visualizations",
    "title": "NBA Early-Career Competition Analysis Code",
    "section": "Key Findings & Visualizations",
    "text": "Key Findings & Visualizations\n\n### Bootstrap CIs for Mixed Models ###\nboot.res &lt;- bootMer(fit_mixed, FUN = fixef, nsim = 1000, type = \"parametric\")\n\n# Fixed effects of interest\nresearch_effects &lt;- c(\"poscomp_rookie_c\", \n                      \"poscomp_soph_c\", \n                      \"poscomp_rookie_c:ns(CareerYear_c, 2)1\", \n                      \"poscomp_rookie_c:ns(CareerYear_c, 2)2\", \n                      \"ns(CareerYear_c, 2)1:poscomp_soph_c\", \n                      \"ns(CareerYear_c, 2)2:poscomp_soph_c\")\n\nindices &lt;- which(names(fixef(fit_mixed)) %in% research_effects)\n\n# 95% CIs\nci_list &lt;- lapply(indices, function(i) {\n  quantile(boot.res$t[, i], probs = c(0.025, 0.975))\n  })\n\nnames(ci_list) &lt;- research_effects\n\n\n### Coefficient Table ###\ncoef_table &lt;- data.frame(\n  estimate = fixef(fit_mixed)[research_effects],\n  conf.low = sapply(ci_list, `[`,1),\n  conf.high = sapply(ci_list, `[`,2)\n  ) %&gt;%\n  mutate(significant = ifelse(conf.low * conf.high &gt; 0, TRUE, FALSE))\n\n# Build table\nkable(coef_table, digits = 4, caption = \"Fixed Effects with Bootstrapped 95% CI\") %&gt;%\n  kable_styling(full_width = FALSE) %&gt;%\n  row_spec(which(coef_table$significant), bold = TRUE) # bold sig. effects\n\n\n# See what knots are selected\nattr(terms(fit_mixed), \"predvars\")[[4]]\n\n\n# Plotting each basis function\ncareer_seq &lt;- seq(min(player_data$CareerYear_c), max(player_data$CareerYear_c), \n                  length.out=100)\nbasis &lt;- ns(career_seq, knots=0.05487805, \n            Boundary.knots = c(-1.94512195,2.05487805))\nmatplot(career_seq, basis, type = \"l\", lty=1, col=c(\"black\",\"red\"), \n        xlab = \"Career Year (centered)\", ylab = \"Basis Function Value\")\nlegend(\"topleft\", legend = c(\"Basis 1\", \"Basis 2\"),col=c(\"black\",\"red\"), lty=1)\n\n\n### Fixed Effects Plot ###\ncoefs_plot &lt;- data.frame(\n  term = research_effects,\n  estimate = fixef(fit_mixed)[research_effects],\n  conf.low = sapply(ci_list, `[`,1),\n  conf.high = sapply(ci_list, `[`,2)\n  )\n\n# Define order of variables listed\ndesired_order &lt;- c(\n   \"Sophomore Competition x Career Year (Basis 2)\",\n  \"Sophomore Competition x Career Year (Basis 1)\",\n  \"Sophomore Competition\",\n  \"Rookie Competition x Career Year (Basis 2)\",\n  \"Rookie Competition x Career Year (Basis 1)\",\n  \"Rookie Competition\"\n)\n\n# Rename variables\ncoefs_plot &lt;- coefs_plot %&gt;%\n  mutate(\n    term_type = ifelse(grepl(\":\", term), \"Interaction\", \"Main Effect\"),\n    term = dplyr::recode(term,\n     \"poscomp_rookie_c\" = \"Rookie Competition\",\n     \"poscomp_soph_c\" = \"Sophomore Competition\",\n     \"poscomp_rookie_c:ns(CareerYear_c, 2)1\" = \n       \"Rookie Competition x Career Year (Basis 1)\", \n     \"poscomp_rookie_c:ns(CareerYear_c, 2)2\" = \n       \"Rookie Competition x Career Year (Basis 2)\", \n     \"ns(CareerYear_c, 2)1:poscomp_soph_c\" = \n       \"Sophomore Competition x Career Year (Basis 1)\",\n     \"ns(CareerYear_c, 2)2:poscomp_soph_c\" = \n       \"Sophomore Competition x Career Year (Basis 2)\")\n    ) %&gt;%\n  mutate(term = factor(term, levels = desired_order)) %&gt;%\n  mutate(\n    tooltip = paste0(\n      term, \"\\nEstimate: \", round(estimate, 2),\n      \"\\n95% CI: [\", round(conf.low, 2), \", \", round(conf.high, 2), \"]\"\n      )\n    )\n\n# Coefficient plot\np2 &lt;- ggplot(coefs_plot, aes(x = estimate, y = term, color = term_type, \n                             text = tooltip)) +\n  geom_point(size=3) +\n  geom_errorbarh(aes(xmin = conf.low, xmax = conf.high), height=0.2) +\n  geom_vline(xintercept=0, linetype = \"dashed\", color = \"grey50\") +\n  scale_color_manual(values = c(\"Main Effect\" = \"#f0f921\", \n                                \"Interaction\" = \"#0d0887\")) +\n  labs(x = \"Estimate (with Bootstrapped 95% CI)\", y = \"\",  color = \"Term Type\",\n       title = \"Fixed Effects on Points per Game\") +\n  theme_minimal() +\n   theme(\n    plot.title = element_text(face = \"bold\", size=14)\n    )\n\n# Make interactive\nggplotly(p2, tooltip = \"text\") %&gt;%\n  layout(\n    legend = list(\n    x = 1.02, \n    y = 0.5, \n    xanchor = \"left\", \n    yanchor = \"middle\"\n    )\n  )\n\n\n### Interaction Plot ###\nint_pred &lt;- ggpredict(fit_mixed, \n                      terms = c(\"CareerYear_c[all]\", \"poscomp_soph_c\"))\n\n# Un-center CareerYear\nmean_year &lt;- mean(player_data$CareerYear_index, na.rm = TRUE)\nint_pred$career_year &lt;- round(int_pred$x + mean_year,0)\n\n# Map to original poscomp_soph values\norig_soph_levels &lt;- sort(unique(player_data$poscomp_soph))\nnames(orig_soph_levels) &lt;- sort(unique(int_pred$group)) \n\n# Create labels\nlabels_soph &lt;- ifelse(orig_soph_levels == 1,\n                      paste(orig_soph_levels, \"Competitor\"),\n                      paste(orig_soph_levels, \"Competitors\"))\n\nlevels_soph &lt;- sort(unique(int_pred$group))\n\nint_pred$group &lt;- factor(int_pred$group,\n                         levels = levels_soph,\n                         labels = labels_soph)\n\n# Interaction plot\np3 &lt;- ggplot(int_pred, aes(x = career_year, y = predicted, color=group, group=group)) +\n  geom_line(aes(\n    text = paste0(\n      \"Competition Level: \", group, \"&lt;br&gt;\",\n      \"Predicted PTS/G: \", round(predicted, 2), \"&lt;br&gt;\",\n      \"95% CI: [\", round(conf.low,2), \", \", round(conf.high,2), \"]\"\n    )\n  ), linewidth=1.2) +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), fill=\"grey70\", alpha=0.2,\n              show.legend = FALSE) +\n  scale_x_continuous(\n    breaks = seq(min(int_pred$career_year), max(int_pred$career_year), length.out=5),\n    name = \"Career Year\"\n    ) +\n  scale_color_viridis(\n  discrete = TRUE, \n  name = \"Sophomore-Year Competition Level\",\n  option = \"C\" \n  ) +\n  labs(\n    y = \"Predicted Points per Game\",\n    title = \"Predicted Scoring Trajectories by Sophomore-Year Competition\",\n    subtitle = \"with Bootstrapped 95% Confidence Intervals\"\n    ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size=16),\n    plot.subtitle = element_text(hjust=0.5, size=12, face = \"italic\", \n                                 color = \"gray40\")\n    )\n\n# Make interactive\nggplotly(p3,tooltip=\"text\")%&gt;%\n  layout(\n    title = list(\n      text = paste0(\n        '&lt;b&gt;Predicted Scoring Trajectories by Sophomore-Year Competition&lt;/b&gt;&lt;br&gt;',\n        '&lt;sup style=\"color:gray\"&gt;with Bootstrapped 95% Confidence Intervals&lt;/sup&gt;'\n      ),\n      x = 0,\n      xanchor = \"left\"\n    ),\n    legend = list(\n      x=1.02, y=1,\n      xanchor = \"left\", yanchor = \"top\"\n    )\n  )\n\n\n### Coefficient Table for All Predictors ###\nall_effects &lt;- names(fixef(fit_mixed))\n\n# 95% CIs for all fixed effects\nci_list_all &lt;- lapply(seq_along(all_effects), function(i) {\n  quantile(boot.res$t[, i], probs = c(0.025, 0.975))\n})\n\nnames(ci_list_all) &lt;- all_effects\n\n# Build table\ncoef_table_all &lt;- data.frame(\n  estimate = fixef(fit_mixed),\n  conf.low = sapply(ci_list_all, `[`, 1),\n  conf.high = sapply(ci_list_all, `[`, 2)\n) %&gt;%\n  mutate(significant = ifelse(conf.low * conf.high &gt; 0, TRUE, FALSE))\n\nkable(coef_table_all, digits = 4, caption = \"Fixed Effects with Bootstrapped 95% CI\") %&gt;%\n  kable_styling(full_width = FALSE) %&gt;%\n  row_spec(which(coef_table_all$significant), bold = TRUE)\n\n\n### Model Information ###\nsummary(fit_mixed)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]
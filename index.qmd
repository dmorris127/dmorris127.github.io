---
title: "NBA Early-Career Competition Analysis"
---

### Objective

Examine how **rookie- and sophomore-year positional competition** affects NBA lottery picks' scoring trajectories over their first five seasons. *Positional competition* measures how crowded a player's role is on their team.

------------------------------------------------------------------------

```{r echo=FALSE}
#| message: false
#| warning: false
library(lme4)
library(dplyr)
library(ggplot2)
library(viridis)
library(plotly)
library(ggeffects)
library(splines)


fit_mixed <- readRDS("output/fit_mixed.rds")
int_pred <- readRDS("int_pred.rds")

# Interaction plot
p3 <- ggplot(int_pred, aes(x = career_year, y = predicted, color = group, group=group)) +
  geom_line(aes(
    text = paste0(
      "Competition Level: ", group, "<br>",
      "Predicted PTS/G: ", round(predicted, 2), "<br>",
      "95% CI: [", round(conf.low,2), ", ", round(conf.high,2), "]"
    )
  ), linewidth=1.2) +
  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), fill="grey70", alpha=0.2,
              show.legend = FALSE) +
  scale_x_continuous(
    breaks = seq(min(int_pred$career_year), max(int_pred$career_year), length.out=5),
    name = "Career Year"
    ) +
  scale_color_viridis(
  discrete = TRUE, 
  name = "Sophomore-Year Competition Level",
  option = "C" 
  ) +
  labs(
    y = "Predicted Points per Game",
    title = "Predicted Scoring Trajectories by Sophomore-Year Competition",
    subtitle = "with 95% Confidence Intervals"
    ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size=15),
    plot.subtitle = element_text(hjust=0.5, size=12, face = "italic", 
                                 color = "gray40")
    )

#p3 <- p3 +
#  scale_y_continuous(expand = c(0.05, 0))  # adds a bit of vertical padding


ggplotly(p3, tooltip = "text") %>%
  layout(
    autosize = TRUE,
    title = list(
      text = paste0(
        '<b>Predicted Scoring Trajectories by Sophomore-Year Competition</b><br>',
        '<sup style="color:gray">with 95% Confidence Intervals</sup>'
      ),
      x = 0, xanchor = "left", y = 1.05
    ),
    legend = list(
      title = list(text = "<b>Sophomore-Year Competition</b>"),
      font = list(size = 10),
      orientation = "v",
      x = 1.02, y = 1,
      xanchor = "left", yanchor = "top"
    ),
    #margin = list(t = 120, b = 120, l = 80, r = 140)
    margin = list(t = 50, b = 40, l = 80, r = 140)  # balance top/bottom
  ) %>%
  config(displaylogo = FALSE, displayModeBar = "hover", responsive = TRUE) %>%
  htmlwidgets::onRender("
  function(el, x) {
    function resizeLayout() {
      var width = el.offsetWidth;
      var isMobile = width < 600;
  
      // Font sizes
      var titleSize = isMobile ? 9 : 16;
      var axisTitleSize = isMobile ? 8 : 14;
      var legendTitleSize = isMobile ? 8 : 14;
      var legendTextSize = isMobile ? 7 : 12;
  
      // Title alignment
      var titleX = isMobile ? 0.5 : 0;
      var titleAnchor = isMobile ? 'center' : 'left';
  
      // Legend layout
      var legendOrientation = isMobile ? 'h' : 'v';
      var legendX = isMobile ? 0.5 : 1.02;
      var legendY = isMobile ? -0.2 : 1; // below plot
      var legendXanchor = isMobile ? 'center' : 'left';

  
      // Margins
      var marginTop = isMobile ? 120 : 50;
      var marginBottom = isMobile ? 80 : 40; // reduced whitespace
      var marginLeft = isMobile ? 60 : 80;
      var marginRight = isMobile ? 60 : 140;
  
      Plotly.relayout(el, {
        'title.font.size': titleSize,
        'title.x': titleX,
        'title.xanchor': titleAnchor,
        'xaxis.title.font.size': axisTitleSize,
        'yaxis.title.font.size': axisTitleSize,
        'legend.font.size': legendTextSize,
        'legend.title.font.size': legendTitleSize,
        'legend.orientation': legendOrientation,
        'legend.x': legendX,
        'legend.y': legendY,
        'legend.xanchor': legendXanchor,
        'margin.t': marginTop,
        'margin.b': marginBottom,
        'margin.l': marginLeft,
        'margin.r': marginRight
      });
    }
  
    window.addEventListener('resize', resizeLayout);
    resizeLayout();
  }
  ")

```

------------------------------------------------------------------------

### Key Insight

â˜… After accounting for individual and team-level factors, **players facing more competition in their sophomore year start strong but plateau, or even decline in points per game over time**, while rookie-year competition slightly boosts baseline scoring without affecting growth.

------------------------------------------------------------------------

### Methods

-   **Data**: Player stats from [Basketball Reference](https://www.basketball-reference.com), cleaned and processed in Python and R.

-   **Model**: Linear mixed-effects model capturing player-level differences over time.

-   **Validation**: Confidence intervals and diagnostics ensured reliable estimates.

-   **Visualization**: Interactive plots of predicted scoring trajectories.

------------------------------------------------------------------------

### Quick Takeaways

-   **Sophomore-year competition matters**: Players facing more competition peak early, then flatten or decline.

-   **Rookie-year competition has smaller effect**: Slightly raises baseline scoring without impacting growth.

-   **Overall Pattern**: Early-career competition gives modest initial gains that fade over time.

------------------------------------------------------------------------

### Why It Matters

The methods used here apply beyond sports:

-   **Finance**: Modeling portfolio growth under varying conditions.

-   **Healthcare**: Analyzing patient outcomes over time under different treatments.

-   **Education**: Evaluating student performance trajectories in different learning environments.

------------------------------------------------------------------------

### Deep Dive

The full analysis including **data processing**, **model building**, and **detailed results** is available:

[Read the Full Analysis](full_analysis.qmd){.btn .btn-primary}
